name: AutoCheck
run-name: Verifying Pushed Codes of ${{ github.actor }} 

on: [push, pull_request]
jobs:
  
  vm-testing:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@master
        with:
          fetch-depth: 0

      - shell: bash
      

      # Building from Source Code
        name: Building from Source Files
        run: |
          cmake -B build .
          cd build/
          sudo make install
      
      # Generating Configuration Files
      - name: Generating Configuration Files
        run: |
          cd ~
          mkdir Documents Pictures Videos Music

      # Executing Binary
      - name: Executing Binary
        run: |
          cd .github/samples
          qsort
      
      # Checking If Everything Working Perfectly
      - name: Verifying Files
        run: |
          if [[ -f "$HOME/Documents/document.doc" ]]; then
              echo "Document Verification Complete"
          else
              echo "Document Verification Failed"
              exit 1
          fi

          if [[ -f "$HOME/Pictures/blackhole.jpg" ]]; then
              echo "Picture Verification Complete"
          else
              echo "Picture Verification Failed"
              exit 1
          fi

          if [[ -f "$HOME/Videos/horse.mp4" ]]; then
              echo "Video Verification Complete"
          else
              echo "Video Verification Failed"
              exit 1
          fi

          if [[ ! -f "$HOME/add.py" ]]; then
              echo "General Files Verification Complete"
          else
              echo "General Files Verification Failed"
              exit 1
          fi

  debian-package:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@master
        with:
          persist-credentials: false
          fetch-depth: 0
      
      - shell: bash

      # Updating the Source Code Information
        name: Updating the Source Code
        run: |
          # Updates the Source Code Version
          ver=$(echo ${{ vars.VER }} | cut -f1 -d-)
          vertype=$(echo ${{ vars.VER }} | cut -f2 -d-)
          userver=$(grep -n "const string ver = \"" lib/user.hpp | head -1 | awk '{print $5}' | cut -f2 -d\")
          uservertype=$(grep -n "const string vertype = \"" lib/user.hpp | head -1 | awk '{print $5}' | cut -f2 -d\")
          if [[ "$ver" != "$userver" ]]; then
              sed -i 's/const string ver = "'"$userver"'";/const string ver = "'"$ver"'";/' lib/user.hpp
          fi
          if [[ "$vertype" != "$uservertype" ]]; then
              sed -i 's/const string vertype = "'"$uservertype"'";/const string vertype = "'"$vertype"'";/' lib/user.hpp
          fi

      # Generating Files
      - name: Compiling Files
        run: |
          echo .gitignore>.gitignore
          echo build/>>.gitignore
          cmake -B build .
          cd build/
          make

      # Modifying Debian Installer Information
      - name: Modifying Debian Installer Information
        run: |
          # Updates the version into control
          default=$(cat DEBIAN/control | grep "Version" | awk '{print $2}')
          if [[ "$default" != "${{ vars.VER }}" ]]; then
              sed -i 's/Version: '"$default"'/Version: '"${{ vars.VER }}"'/' DEBIAN/control
          fi

          # Updates total installed size
          default=$(cat DEBIAN/control | grep "Installed-Size" | awk '{print $2}')
          compiled=$(ls -l build/qsort | awk '{print $5}')
          compiled=$((compiled/1024))
          if [[ "$compiled" -ne "$default" ]]; then
              sed -i 's/Installed-Size: '"$default"'/Installed-Size: '"$compiled"'/' DEBIAN/control
          fi
          
      # Signing Files
      - name: Updating Files
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add .
          git commit -m "Updated debian control information" && echo File Updated || echo Already up-to-date

      # Pushing Files
      - name: Pushing Files
        uses: ad-m/github-push-action@master
        with:
          force: true
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}